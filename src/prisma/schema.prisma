generator client {
  provider = "prisma-client-js"
}

datasource NorthwindAPIDB {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model customers {
  id              Int    @id @map("_id")
  address         String
  business_phone  String
  city            String
  company         String
  country_region  String
  fax_number      String
  first_name      String
  job_title       String
  last_name       String
  state_province  String
  zip_postal_code Int

  orders       orders[]
}

model employee_privileges {
  id           String @id @default(auto()) @map("_id") @NorthwindAPIDB.ObjectId
  employee_id  Int
  privilege_id Int
}

model employees {
  id              Int     @id @map("_id")
  address         String
  business_phone  String
  city            String
  company         String
  country_region  String
  email_address   String
  fax_number      String
  first_name      String
  home_phone      String
  job_title       String
  last_name       String
  notes           String?
  state_province  String
  web_page        String
  zip_postal_code Int

  orders       orders[]
}

model inventory_transaction_types {
  id        Int    @id @map("_id")
  type_name String
}

model inventory_transactions {
  id                        Int     @id @map("_id")
  comments                  String?
  product_id                Int
  quantity                  Int
  transaction_created_date  String
  transaction_modified_date String
  transaction_type          Int
}

model invoices {
  id           Int    @id @map("_id")
  amount_due   Float
  invoice_date String
  order_id     Int
  shipping     Float
  tax          Float
}

model order_details {
  id                Int   @id @map("_id")
  discount          Int
  inventory_id      Int?
  order_id          Int
  product_id        Int
  purchase_order_id Int?
  quantity          Float
  status_id         Int
  unit_price        Float

  order                     orders                    @relation(fields: [order_id], references: [id])
  product                   products                  @relation(fields: [product_id], references: [id])
}

model order_details_status {
  id          Int    @id @map("_id")
  status_name String
}

model orders {
  id                   Int     @id @map("_id")
  customer_id          Int
  employee_id          Int
  order_date           String
  paid_date            String?
  payment_type         String?
  ship_address         String
  ship_city            String
  ship_country_region  String
  ship_name            String
  ship_state_province  String
  ship_zip_postal_code Int
  shipped_date         String?
  shipper_id           Int
  shipping_fee         Float
  status_id            Int
  tax_rate             Int
  taxes                Float

  customer     customers      @relation(fields: [customer_id], references: [id])
  employee     employees      @relation(fields: [employee_id], references: [id])
  shipper      shippers       @relation(fields: [shipper_id], references: [id])
  order_details            order_details[]
}

model orders_status {
  id          Int    @id @map("_id")
  status_name String
}

model orders_tax_status {
  id              Int    @id @map("_id")
  tax_status_name String
}

model privileges {
  id             Int    @id @map("_id")
  privilege_name String
}

model products {
  id                       Int     @id @map("_id")
  category                 String
  discontinued             Int
  list_price               Float
  minimum_reorder_quantity Int?
  product_code             String
  product_name             String
  quantity_per_unit        String?
  reorder_level            Int
  standard_cost            Float
  /// Multiple data types found: String: 11.1%, Int: 88.9% out of 45 sampled entries
  supplier_ids             Json
  target_level             Int

  order_details            order_details[]
}

model purchase_order_details {
  id                  Int     @id @map("_id")
  date_received       String?
  inventory_id        Int?
  posted_to_inventory Int
  product_id          Int
  purchase_order_id   Int
  quantity            Float
  unit_cost           Float
}

model purchase_order_status {
  id     Int    @id @map("_id")
  status String
}

model purchase_orders {
  id             Int     @id @map("_id")
  approved_by    Int?
  approved_date  String?
  created_by     Int?
  creation_date  String
  notes          String?
  payment_amount Float
  payment_method String?
  shipping_fee   Float
  status_id      Int
  submitted_by   Int
  submitted_date String
  supplier_id    Int
  taxes          Float
}

model sales_reports {
  id                String @id @default(auto()) @map("_id") @NorthwindAPIDB.ObjectId
  default           Int
  display           String
  filter_row_source String
  group_by          String
  title             String
}

model shippers {
  id              Int    @id @map("_id")
  address         String
  city            String
  company         String
  country_region  String
  state_province  String
  zip_postal_code Int
  orders          orders[]
}

model strings {
  id          String @id @default(auto()) @map("_id") @NorthwindAPIDB.ObjectId
  string_data String
  string_id   Int
}

model suppliers {
  id         Int    @id @map("_id")
  company    String
  first_name String
  job_title  String
  last_name  String
}
